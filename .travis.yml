language: python
sudo: required
python:
  - "2.7"
services:
  - docker
env:
  global:
    - exit_code=0
    - number_per_job=2
    - message=()
    - max_retry_count=2
before_install:
  - create_resource_group() {
      name=$1;
      name2=${name}2;
      ansible-playbook ../create_resource_group.yml --extra-vars="name=$name name2=$name2";
    }
  - delete_resource_group() {
      name=$1;
      name2=${name}2;
      ansible-playbook ../delete_resource_group.yml --extra-vars="name=$name name2=$name2";
    }
  - "write_credential() { printf \"AZURE_CLIENT_ID: ${AZURE_CLIENT_ID}\nAZURE_SECRET: ${AZURE_SECRET}\nAZURE_SUBSCRIPTION_ID: ${AZURE_SUBSCRIPTION_ID}\nAZURE_TENANT: ${AZURE_TENANT}\nRESOURCE_GROUP: $group_name\nRESOURCE_GROUP_SECONDARY: $group_name_secondary\" >> test/integration/cloud-config-azure.yml; }"
  - run_test() {
      test_name=$1;
      group_name="asb-it-${test_name##azure_rm_}";
      group_name_secondary="${group_name}2";
      loop=1;

      while [ $loop -le $max_retry_count ]; do

        echo Run test $test_name $loop time;
        
        create_resource_group $group_name;
        rm test/integration/cloud-config-azure.yml 2>/dev/null;
        touch test/integration/cloud-config-azure.yml;
        write_credential;
        travis_wait 50 ansible-test integration $test_name --docker --color=yes;
        
        if [ $? -ne 0 ]; then
          echo test $test_name failed at $loop time run;

          if [ $loop -eq $max_retry_count ]; then
            message+=($test_name);
            export exit_code=1;
          fi;
          loop=$[$loop+1];
        else
          echo test $test_name passed at $loop time run;
          travis_wait 50 delete_resource_group $group_name;
          break;
        fi;
      done;

      travis_wait 50 delete_resource_group $group_name;
    }
  - scan_test() {
      end=$((id * number_per_job));
      start=$((end - number_per_job));
      liststr=test/integration/targets/azure_rm_*;
      list=($liststr);
      echo start = $start, end = $end, list_lenth = ${#list[@]};
      for (( i = $start; i < $end; i++ )); do
        if [ "$i" -lt "${#list[@]}" ]; then
          file=${list[$i]};
          name=${file##test/integration/targets/};
          run_test $name;
        fi

      done
    }
install:
  - sudo apt-get update
  - sudo apt-get install -y libssl-dev libffi-dev python-dev python-pip
  - mkdir ~/.azure
  - touch ~/.azure/credentials
  - printf "[default]\nsubscription_id=${AZURE_SUBSCRIPTION_ID}\nclient_id=${AZURE_CLIENT_ID}\nsecret=${AZURE_SECRET}\ntenant=${AZURE_TENANT}" >> ~/.azure/credentials
  - git clone https://github.com/VSChina/ansible.git
  - cd ansible
  - pip install virtualenv
  - virtualenv venv
  - . venv/bin/activate
  - pip install .
  - pip install -r requirements.txt
  - pip install -r packaging/requirements/requirements-azure.txt
  - . hacking/env-setup
  - pip freeze
  - ansible --version
script:
  - docker --version
  - scan_test
  - (>&2 echo $message)
  - exit $exit_code

notifications:
  email:
    recipients:
      - jieshe@microsoft.com
    on_success: always
    on_failure: always